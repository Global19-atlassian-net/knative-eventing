---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-logging
  namespace: knative-eventing
data:
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "ts",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "iso8601",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
  loglevel.controller: "info"
  loglevel.webhook: "info"
---
apiVersion: v1
kind: Namespace
metadata:
  name: knative-eventing
  labels:
    istio-injection: enabled
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eventing-controller
  namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eventing-controller-admin
subjects:
  - kind: ServiceAccount
    name: eventing-controller
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clusterchannelprovisioners.eventing.knative.dev
spec:
  group: eventing.knative.dev
  version: v1alpha1
  names:
    kind: ClusterChannelProvisioner
    plural: clusterchannelprovisioners
    singular: clusterchannelprovisioner
    categories:
    - all
    - knative
    - eventing
    - provisioner
    shortNames:
    - ccp
  scope: Cluster
  subresources:
    status: {}
  additionalPrinterColumns:
    - name: Ready
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: channels.eventing.knative.dev
spec:
  group: eventing.knative.dev
  version: v1alpha1
  names:
    kind: Channel
    plural: channels
    singular: channel
    categories:
    - all
    - knative
    - eventing
    shortNames:
    - chan
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
    - name: Ready
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: subscriptions.eventing.knative.dev
spec:
  group: eventing.knative.dev
  version: v1alpha1
  names:
    kind: Subscription
    plural: subscriptions
    singular: subscription
    categories:
    - all
    - knative
    - eventing
    shortNames:
    - sub
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
    - name: Ready
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: default-channel-webhook
  namespace: knative-eventing
data:
  default-channel-config: |
    clusterdefault:
      apiversion: eventing.knative.dev/v1alpha1
      kind: ClusterChannelProvisioner
      name: in-memory
    namespacedefaults:
      some-namespace:
        apiversion: eventing.knative.dev/v1alpha1
        kind: ClusterChannelProvisioner
        name: some-other-provisioner
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: webhook
  name: webhook
  namespace: knative-eventing
spec:
  ports:
    - port: 443
      targetPort: 443
  selector:
    role: webhook
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventing-controller
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      app: eventing-controller
  template:
    metadata:
      labels: *labels
    spec:
      serviceAccountName: eventing-controller
      containers:
      - name: eventing-controller
        terminationMessagePolicy: FallbackToLogsOnError
        image: quay.io/openshift-knative/knative-eventing-controller:v0.4.1
        args: [
          "-logtostderr",
          "-stderrthreshold", "INFO"
        ]
        volumeMounts:
          - name: config-logging
            mountPath: /etc/config-logging
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      volumes:
        - name: config-logging
          configMap:
            name: config-logging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      app: webhook
      role: webhook
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels: *labels
    spec:
      serviceAccountName: eventing-controller
      containers:
      - name: webhook
        terminationMessagePolicy: FallbackToLogsOnError
        image: quay.io/openshift-knative/knative-eventing-webhook:v0.4.1
        volumeMounts:
        - name: config-logging
          mountPath: /etc/config-logging
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      volumes:
        - name: config-logging
          configMap:
            name: config-logging
---
apiVersion: eventing.knative.dev/v1alpha1
kind: ClusterChannelProvisioner
metadata:
  name: in-memory
spec: {}
---
apiVersion: eventing.knative.dev/v1alpha1
kind: ClusterChannelProvisioner
metadata:
  name: in-memory-channel
spec: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: in-memory-channel-controller
  namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: in-memory-channel-controller
rules:
  - apiGroups:
      - eventing.knative.dev
    resources:
      - channels
      - channels/status
      - clusterchannelprovisioners
      - clusterchannelprovisioners/status
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
    - eventing.knative.dev
    resources:
    - channels/finalizers
    verbs:
    - update
  - apiGroups:
      - "" # Core API group.
    resources:
      - configmaps
      - services
    verbs:
      - get
      - list
      - watch
      - create
  - apiGroups:
        - "" # Core API group.
    resources:
      - services
    resourceNames:
      - in-memory-channel-clusterbus
    verbs:
      - delete
  - apiGroups:
      - "" # Core API group.
    resources:
      - services
    verbs:
      - update
  - apiGroups:
      - "" # Core API Group.
    resources:
      - configmaps
    resourceNames:
      - in-memory-channel-dispatcher-config-map
    verbs:
      - update
  - apiGroups:
      - networking.istio.io
    resources:
      - virtualservices
    verbs:
      - get
      - list
      - watch
      - create
      - update
  - apiGroups:
      - "" # Core API Group.
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: in-memory-channel-controller
  namespace: knative-eventing
subjects:
  - kind: ServiceAccount
    name: in-memory-channel-controller
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: in-memory-channel-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: in-memory-channel-controller
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      clusterChannelProvisioner: in-memory-channel
      role: controller
  template:
    metadata:
      labels: *labels
    spec:
      serviceAccountName: in-memory-channel-controller
      containers:
        - name: controller
          image: quay.io/openshift-knative/knative-eventing-in-memory-channel-controller:v0.4.1
          env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: in-memory-channel-dispatcher
  namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: in-memory-channel-dispatcher
  namespace: knative-eventing
rules:
  - apiGroups:
      - "" # Core API group.
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: in-memory-channel-dispatcher
  namespace: knative-eventing
subjects:
  - kind: ServiceAccount
    name: in-memory-channel-dispatcher
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: in-memory-channel-dispatcher
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: in-memory-channel-dispatcher
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      clusterChannelProvisioner: in-memory-channel
      role: dispatcher
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels: *labels
    spec:
      serviceAccountName: in-memory-channel-dispatcher
      containers:
        - name: dispatcher
          image: quay.io/openshift-knative/knative-eventing-fanoutsidecar:v0.4.1
          args:
            - --sidecar_port=8080
            - --config_map_noticer=watcher
            - --config_map_namespace=knative-eventing
            - --config_map_name=in-memory-channel-dispatcher-config-map
          env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
